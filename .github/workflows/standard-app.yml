name: Helm Chart Release

on:
  push:
    branches:
      - standard-app

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Helm
        uses: azure/setup-helm@v1

      - name: Get Current Chart Version
        id: current_version
        run: echo "::set-output name=version::$(awk '/version:/ {print $2}' charts/standard-app/Chart.yaml)"

      - name: Increment Version
        id: increment_version
        run: |
          current_version=${{ steps.current_version.outputs.version }}
          IFS='.' read -r -a version_parts <<< "$current_version"
          ((version_parts[${#version_parts[@]} - 1]++))
          new_version="${version_parts[0]}"
          for ((i = 1; i < ${#version_parts[@]}; i++)); do
            new_version="${new_version}.${version_parts[i]}"
          done
          echo "::set-output name=new_version::$new_version"

      - name: Update Chart Version in Chart.yaml
        run: |
          new_version=${{ steps.increment_version.outputs.new_version }}
          sed -i "s/version: ${{ steps.current_version.outputs.version }}/version: $new_version/" charts/standard-app/Chart.yaml

      - name: Commit and Push Changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add packaged/ charts/standard-app/Chart.yaml index.yaml && git commit -m "Update Helm repository"
          git push origin standard-app

      - name: Update Tag
        id: update_tag
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.bump_version.outputs.new_version }}
          release_name: Release v${{ steps.bump_version.outputs.new_version }}
          body: |
            Update tag.
          draft: false
          prerelease: false
