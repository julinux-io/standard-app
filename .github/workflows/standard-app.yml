name: Helm Chart Release

on:
  push:
    branches:
      - standard-app

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Helm
        uses: azure/setup-helm@v1

      - name: Get Current Chart Version
        id: current_version
        run: export version="$(awk '/version:/ {print $2}' charts/standard-app/Chart.yaml)"

      - name: Update Chart Version
        id: update_version
        run: |
          current_version=$(awk '/version:/ {print $2}' charts/standard-app/Chart.yaml)
          increment_version="0.1.0"
          IFS='.' read current_parts <<< "$current_version"
          IFS='.' read increment_parts <<< "$increment_version"

          first=$((current_parts[1] + increment_parts[1]))
          second=$((current_parts[3] + increment_parts[3]))
          third=$((current_parts[5] + increment_parts[5]))

          export new_version="$first.$second.$third"

          sed "s/version:.*/version: $new_version/" charts/standard-app/Chart.yaml > tmpfile && mv tmpfile charts/standard-app/Chart.yaml

      - name: Chart Package
        run: helm package charts/standard-app && mv *.tgz charts/standard-app

      - name: Create/Update index's chart
        run: helm repo index --url https://julinux-io.github.io/standard-app/charts/standard-app charts/standard-app && mv charts/standard-app/index.yaml .

      - name: Commit and Push Changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add packaged/ charts/standard-app/Chart.yaml index.yaml && git commit -m "Update Helm repository"
          git push origin standard-app

  tag_update:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Update Tag
        id: update_tag
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.bump_version.outputs.new_version }}
          release_name: Release v${{ steps.bump_version.outputs.new_version }}
          body: |
            Update tag.
          draft: false
          prerelease: false
