name: Helm Chart Release

on:
  push:
    branches:
      - standard-app

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Helm
        uses: azure/setup-helm@v1

      - name: Get Current Chart Version
        id: current_version
        run: echo "$(awk '/version:/ {print $2}' charts/standard-app/Chart.yaml)"

      - name: Update Version in Chart.yaml
        run: |
          new_version=${{ steps.increment_version.outputs.new_version }}
          sed -i "s/version: ${{ steps.current_version.outputs.result }}/version: $new_version/" charts/standard-app/Chart.yaml

      - name: Get Updated Chart Version
        id: updated_version
        run: echo "$(awk '/version:/ {print $2}' charts/standard-app/Chart.yaml)"

      - name: Chart Package
        run: helm package charts/standard-app && mv *.tgz charts/standard-app

      - name: Create/Update index's chart
        run: |
          helm repo index --url https://julinux-io.github.io/standard-app/charts/standard-app charts/standard-app && mv charts/standard-app/index.yaml .

      - name: Commit and Push Changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add packaged/ charts/standard-app/Chart.yaml index.yaml && git commit -m "Update Helm repository"
          git push origin standard-app

      - name: Update Tag
        if: contains(steps.check_changes.outputs.result, '.github/workflows/standard-app.yml') == false
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v${{ steps.updated_version.outputs.result }}
          release_name: Release v${{ steps.updated_version.outputs.result }}
          body: Update tag.
          draft: false
          prerelease: false
